/**
 * Time-addressable Media Store
 *
 * Contact: cloudfit-opensource@rd.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { VideoFlowEssenceParametersFrameRate } from './video-flow-essence-parameters-frame-rate';
import { AVCCodecParameters } from './avc-codec-parameters';
import { VideoFlowEssenceParametersAspectRatio } from './video-flow-essence-parameters-aspect-ratio';
import { VideoFlowEssenceParametersPixelAspectRatio } from './video-flow-essence-parameters-pixel-aspect-ratio';
import { UncompressedVideoParameters } from './uncompressed-video-parameters';


/**
 * Describes the parameters of the essence inside this video Flow
 */
export interface VideoFlowEssenceParameters { 
    frame_rate?: VideoFlowEssenceParametersFrameRate;
    /**
     * The width of the picture in pixels.
     */
    frame_width: number;
    /**
     * The height of the picture in pixels.
     */
    frame_height: number;
    /**
     * The number of significant bits used to represent the video component sample. If codec is `video/raw`, bit_depth must be set.
     */
    bit_depth?: number;
    /**
     * Interlaced video mode for frames in this Flow
     */
    interlace_mode?: VideoFlowEssenceParameters.InterlaceModeEnum;
    /**
     * Colorspace used for the video
     */
    colorspace?: VideoFlowEssenceParameters.ColorspaceEnum;
    /**
     * Transfer characteristic
     */
    transfer_characteristic?: VideoFlowEssenceParameters.TransferCharacteristicEnum;
    aspect_ratio?: VideoFlowEssenceParametersAspectRatio;
    pixel_aspect_ratio?: VideoFlowEssenceParametersPixelAspectRatio;
    /**
     * Picture component representation.
     */
    component_type?: VideoFlowEssenceParameters.ComponentTypeEnum;
    /**
     * Horizontal chroma component sub-sampling. When unc_type is set to a YUV type, horiz_chroma_subs must be set.
     */
    horiz_chroma_subs?: number;
    /**
     * Vertical chroma component sub-sampling. When unc_type is set to a YUV type, vert_chroma_subs must be set.
     */
    vert_chroma_subs?: number;
    unc_parameters?: UncompressedVideoParameters;
    avc_parameters?: AVCCodecParameters;
}
export namespace VideoFlowEssenceParameters {
    export type InterlaceModeEnum = 'progressive' | 'interlaced_tff' | 'interlaced_bff' | 'interlaced_psf';
    export const InterlaceModeEnum = {
        Progressive: 'progressive' as InterlaceModeEnum,
        InterlacedTff: 'interlaced_tff' as InterlaceModeEnum,
        InterlacedBff: 'interlaced_bff' as InterlaceModeEnum,
        InterlacedPsf: 'interlaced_psf' as InterlaceModeEnum
    };
    export type ColorspaceEnum = 'BT601' | 'BT709' | 'BT2020' | 'BT2100';
    export const ColorspaceEnum = {
        Bt601: 'BT601' as ColorspaceEnum,
        Bt709: 'BT709' as ColorspaceEnum,
        Bt2020: 'BT2020' as ColorspaceEnum,
        Bt2100: 'BT2100' as ColorspaceEnum
    };
    export type TransferCharacteristicEnum = 'SDR' | 'HLG' | 'PQ';
    export const TransferCharacteristicEnum = {
        Sdr: 'SDR' as TransferCharacteristicEnum,
        Hlg: 'HLG' as TransferCharacteristicEnum,
        Pq: 'PQ' as TransferCharacteristicEnum
    };
    export type ComponentTypeEnum = 'YCbCr' | 'RGB';
    export const ComponentTypeEnum = {
        YcbCr: 'YCbCr' as ComponentTypeEnum,
        Rgb: 'RGB' as ComponentTypeEnum
    };
}


